% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/symlink.R
\name{symlink}
\alias{symlink}
\title{Create a symbolic link to a file, adjusting paths automatically if needed}
\usage{
symlink(file, link, adjust_path = TRUE, verbose = TRUE)
}
\arguments{
\item{file}{The file that will be linked.
This function does not require this file to exist, but the link will be broken in that case.}

\item{link}{The path to the link to the file.
If this points to an existing file, or an existing link, it will be overwritten.}

\item{adjust_path}{If \code{TRUE} (default), \code{file} is automatically adjusted in the special case in which it is a relative path (assumed to be relative to current directory) but \code{link} is not in the current directory, in which case \code{file} is adjusted to be relative to the parent directory of \code{link}.
If \code{file} is an absolute path, it is never edited, and likewise no editing is needed if \code{link} is in the current directory.
Set to \code{FALSE} to avoid editing in all cases.}

\item{verbose}{If \code{TRUE} (default), function reports the \code{link} and the final \code{file} it points to.}
}
\description{
This function creates a symbolic (soft) link to a file, in a solution that works for all major operating systems, so a file can have two names without actually duplicating data.
Although the two paths can be specified directly, this function automatically handles a conversion for a common but troublesome case when the link is not in the current directory, in which case the file must be relative to the parent directory of the link, although it is more natural to specify the file relative to the current directory.
}
\examples{
# in this example, for the existing file, use this file provided by the package.
# Note that it is an absolute path, so it will not be edited.
file <- system.file("extdata", 'sample.bed', package = "genio", mustWork = TRUE)
# this is the path to the link
link <- tempfile('delete-me-example', fileext = '.bed')

# create the symbolic link!
symlink( file, link )

# delete example link when done
file.remove( link )

}
